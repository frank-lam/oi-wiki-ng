{"version":3,"sources":["webpack:///./node_modules/gatsby-plugin-mdx/index.js","webpack:///./src/components/doc.js","webpack:///./src/templates/doc.js","webpack:///./node_modules/gatsby-plugin-mdx/mdx-renderer.js"],"names":["MDXRenderer","require","module","mdx","data","location","title","slug","frontmatter","description","excerpt","authors","author","tags","noMeta","noComment","noEdit","toc","relativePath","parent","modifiedTime","Layout","body","MdxDoc","query","React","useMDXComponents","useMDXScope","scope","components","children","props","mdxComponents","mdxScope","End","fullScope","keys","Object","values","key","fn"],"mappings":"gFAMA,IAAMA,EAAcC,EAApB,QAEAC,UAAiB,CACfF,YAAaA,I,wKC4BAG,MAjCf,YAA4C,IAApBA,EAAmB,EAA3BC,KAAQD,IAAOE,EAAY,EAAZA,SAEvBC,EAAqB,MAAbH,EAAII,KAAe,KAAOJ,EAAIK,YAAYF,MAClDG,EAAcN,EAAIK,YAAYC,aAAeN,EAAIO,QACjDC,EAAUR,EAAIK,YAAYI,QAAU,KACpCC,EAAOV,EAAIK,YAAYK,MAAQ,KAC/BC,EAASX,EAAIK,YAAYM,QAAU,QACnCC,EAAYZ,EAAIK,YAAYO,WAAa,QACzCC,EAASb,EAAIK,YAAYQ,QAAU,QACnCC,EAAMd,EAAIc,KAAO,KAEjBC,EAAef,EAAIgB,OAAOD,cAAgB,GAC1CE,EAAejB,EAAIgB,OAAOC,cAAgB,GAEhD,OACE,kBAACC,EAAA,EAAD,CACEhB,SAAUA,EACVM,QAASA,EACTL,MAAOA,EACPG,YAAaA,EACbI,KAAMA,EACNI,IAAKA,EACLC,aAAcA,EACdE,aAAcA,EACdN,OAAQA,EACRC,UAAWA,EACXC,OAAQA,GAER,kBAAC,cAAD,KAAcb,EAAImB,QC5BT,SAASC,EAAT,GAAsC,IAAnBnB,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,SAEtC,OAAO,kBAAC,EAAD,CAAKD,KAAMA,EAAMC,SAAUA,IAG7B,IAAMmB,EAAK,c,qrECTlB,IAAMC,EAAQxB,EAAd,Q,EACkCA,EAAQ,QAAlCyB,E,EAAAA,iBAAkBvB,E,EAAAA,IAClBwB,EAAgB1B,EAAQ,QAAxB0B,YAERzB,UAAiB,SAAqB,GAKlC,IAJF0B,EAIC,EAJDA,MACAC,EAGC,EAHDA,WACAC,EAEC,EAFDA,SACGC,E,oIACF,sCACKC,EAAgBN,EAAtB,GACMO,EAAWN,EAFhB,GAKKO,EAAMT,EAAA,SAAc,WACxB,MACE,OAAO,KAGT,IAAMU,EAAS,GAGbV,MAHa,EAIbtB,OAJF,GAQMiC,EAAOC,YAAb,GACMC,EAASF,EAAA,KAAS,SAAAG,GAAG,OAAIJ,EAAJ,MAG3B,OAFQ,mCAAR,KAEOK,2BAAP,OACC,CAACV,EAlBJ,IAoBA,OAAOL,EAAA,mBAA2BI,WAAYG,GAA9C","file":"component---src-templates-doc-js-f8a9df4313556514348b.js","sourcesContent":["/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","import { MDXRenderer } from 'gatsby-plugin-mdx'\nimport React from 'react'\nimport Layout from './Layout'\n\nfunction mdx ({ data: { mdx }, location }) {\n  // const headingTitle = mdx.headings[0] && mdx.headings[0].value\n  const title = mdx.slug === '/' ? null : mdx.frontmatter.title\n  const description = mdx.frontmatter.description || mdx.excerpt\n  const authors = mdx.frontmatter.author || null\n  const tags = mdx.frontmatter.tags || null\n  const noMeta = mdx.frontmatter.noMeta || 'false'\n  const noComment = mdx.frontmatter.noComment || 'false'\n  const noEdit = mdx.frontmatter.noEdit || 'false'\n  const toc = mdx.toc || null\n  // console.log(mdx)\n  const relativePath = mdx.parent.relativePath || ''\n  const modifiedTime = mdx.parent.modifiedTime || ''\n\n  return (\n    <Layout\n      location={location}\n      authors={authors}\n      title={title}\n      description={description}\n      tags={tags}\n      toc={toc}\n      relativePath={relativePath}\n      modifiedTime={modifiedTime}\n      noMeta={noMeta}\n      noComment={noComment}\n      noEdit={noEdit}\n    >\n      <MDXRenderer>{mdx.body}</MDXRenderer>\n    </Layout>\n  )\n}\n\nexport default mdx\n","import { graphql } from 'gatsby'\nimport React from 'react'\nimport Doc from '../components/doc'\n\nexport default function MdxDoc ({ data, location }) {\n  // console.log(data)\n  return <Doc data={data} location={location} />\n}\n\nexport const query = graphql`\n  query($id: String!) {\n    mdx: mdx(id: { eq: $id }) {\n      id\n      fields {\n        slug\n      }\n      excerpt\n      body\n      headings {\n        value\n      }\n      frontmatter {\n        author\n        tags\n        title\n        noMeta\n        noComment\n        description\n      }\n      toc: tableOfContents\n      parent {\n        ... on File {\n          relativePath\n          modifiedTime(formatString: \"YYYY/MM/DD\")\n        }\n      }\n    }\n  }\n`\n","const React = require(`react`)\nconst { useMDXComponents, mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  components,\n  children,\n  ...props\n}) {\n  const mdxComponents = useMDXComponents(components)\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, { components: mdxComponents, ...props })\n}\n"],"sourceRoot":""}